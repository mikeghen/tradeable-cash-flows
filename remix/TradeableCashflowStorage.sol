import {
    ISuperfluid,
    ISuperToken,
    ISuperApp,
    ISuperAgreement,
    SuperAppDefinitions
} from "https://github.com/superfluid-finance/protocol-monorepo/blob/remix-support/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol";


import {
    IConstantFlowAgreementV1
} from "https://github.com/superfluid-finance/protocol-monorepo/blob/remix-support/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol";


library TradeableCashflowStorage  {

  struct Link {                            // An affiliate link generated by calling makeAffiliateLink
    int96 outflowRate;
    address owner;
  }

  struct AffiliateProgram {               // An affiliate progarm generate when TradeableCashflow is deployed
    address owner;                        // Program owner
    ISuperfluid host;                     // Superfluid host contract
    IConstantFlowAgreementV1 cfa;         // The stored constant flow agreement class address
    ISuperToken acceptedToken;            // The accepted token (e.g. xdai)
    mapping(uint => Link) links;          // Maps token IDs to the associate Link
    mapping(uint => address) owners;      //
    mapping(address => uint) referrals;   // Maps address referrals to tokenIds
    int96 lastNetFlowRate;                // The last net flow rate for this applicatoin
  }

}
